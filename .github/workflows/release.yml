name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install deps
        run: npm install

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: |
          # 读取版本号并自动判断标签
          VERSION=$(node -p "require('./package.json').version")
          echo "Publishing version: $VERSION"
          
          if [[ "$VERSION" == *"-alpha"* ]]; then
            TAG="alpha"
            echo "Publishing as alpha tag..."
          elif [[ "$VERSION" == *"-beta"* ]]; then
            TAG="beta"
            echo "Publishing as beta tag..."
          elif [[ "$VERSION" == *"-rc"* ]]; then
            TAG="rc"
            echo "Publishing as release candidate tag..."
          elif [[ "$VERSION" == *"-next"* ]]; then
            TAG="next"
            echo "Publishing as next tag..."
          else
            TAG="latest"
            echo "Publishing as latest stable version..."
          fi
          
          npm publish --tag $TAG
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        run: |
          npm run release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
